<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_main_8c" xml:lang="en-US">
<title>main.c File Reference</title>
<indexterm><primary>main.c</primary></indexterm>
<para>

<para>: Main program body </para>
 
</para>
<programlisting linenumbering="unnumbered">#include &quot;main.h&quot;<?linebreak?>#include &quot;adc.h&quot;<?linebreak?>#include &quot;dma.h&quot;<?linebreak?>#include &quot;tim.h&quot;<?linebreak?>#include &quot;usart.h&quot;<?linebreak?>#include &quot;gpio.h&quot;<?linebreak?>#include &lt;string.h&gt;<?linebreak?>#include &quot;shell.h&quot;<?linebreak?>#include &quot;motor.h&quot;<?linebreak?>#include &quot;adc_mes.h&quot;<?linebreak?></programlisting><simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_main_8c_1a70af21c671abfcc773614a9a4f63d920">SystemClock_Config</link> (void)</para>

<para>System Clock Configuration. </para>
</listitem>
            <listitem><para>void <link linkend="_main_8c_1ae494a9643f29b87d6d81e5264e60e57b">HAL_UART_RxCpltCallback</link> (UART_HandleTypeDef *huart)</para>

<para>Attend qu&apos;un caractère soit entré par l&apos;utilisateur et renvoie vers la fonction d&apos;echo dans la boucle du main. </para>
</listitem>
            <listitem><para>void <link linkend="_main_8c_1af20a88180db1113be1e89266917d148b">HAL_ADC_ConvCpltCallback</link> (ADC_HandleTypeDef *hadc)</para>

<para>Fonction d&apos;asservissement du courant. </para>
</listitem>
            <listitem><para>int <link linkend="_main_8c_1a840291bc02cba5474a4cb46a9b9566fe">main</link> (void)</para>

<para>The application entry point. </para>
</listitem>
            <listitem><para>void <link linkend="_main_8c_1a8a3b0ad512a6e6c6157440b68d395eac">HAL_TIM_PeriodElapsedCallback</link> (TIM_HandleTypeDef *htim)</para>

<para>Period elapsed callback in non blocking mode. </para>
</listitem>
            <listitem><para>void <link linkend="_main_8c_1a1730ffe1e560465665eb47d9264826f9">Error_Handler</link> (void)</para>

<para>This function is executed in case of error occurrence. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_main_8c_1a10158992c73de54456624900c3731cf4"/>int <emphasis role="strong">it_uart</emphasis> = 0</para>
</listitem>
            <listitem><para><anchor xml:id="_main_8c_1a7e4b14e04a89c00de4fc2a02a6198e8c"/>char <emphasis role="strong">buffer_cmd</emphasis> []</para>
</listitem>
            <listitem><para><anchor xml:id="_main_8c_1a835573497a60b314a9bf5a6fcac9602a"/>uint8_t <emphasis role="strong">started</emphasis> []</para>
</listitem>
            <listitem><para><anchor xml:id="_main_8c_1a5e8351883e4e4ebcb0b67e6e5cbe2f79"/>uint8_t <emphasis role="strong">newLine</emphasis> []</para>
</listitem>
            <listitem><para><anchor xml:id="_main_8c_1a9d8a518124b90c249458a5b30ab36c52"/>uint32_t <emphasis role="strong">uartRxReceived</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_main_8c_1a2542ac6d4440b9e1c4a6435c55c79df3"/>uint8_t <emphasis role="strong">uartRxBuffer</emphasis> [UART_RX_BUFFER_SIZE]</para>
</listitem>
            <listitem><para><anchor xml:id="_main_8c_1a3f98e2db2fa0d8f0cfd87b887576207f"/>uint8_t <emphasis role="strong">uartTxBuffer</emphasis> [UART_TX_BUFFER_SIZE]</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>: Main program body </para>

<para>fichier principal</para>

<para><caution><title>Attention</title>

<para></para>
</caution>
Copyright (c) 2023 STMicroelectronics. All rights reserved.</para>

<para>This software is licensed under terms that can be found in the LICENSE file in the root directory of this software component. If no LICENSE file comes with this software, it is provided AS-IS.</para>

<para><formalpara><title>Author</title>

<para>Colin L, Lucas G </para>
</formalpara>
<formalpara><title>Version</title>

<para>1 </para>
</formalpara>
<formalpara><title>Date</title>

<para>20 octobre 2023 </para>
</formalpara>
</para>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_main_8c_1a1730ffe1e560465665eb47d9264826f9"/><section>
    <title>Error_Handler()</title>
<indexterm><primary>Error_Handler</primary><secondary>main.c</secondary></indexterm>
<indexterm><primary>main.c</primary><secondary>Error_Handler</secondary></indexterm>
<para><computeroutput>void Error_Handler (void )</computeroutput></para><para>

<para>This function is executed in case of error occurrence. </para>
</para>

<para>
                <formalpara>
                    <title>
Return values</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>None</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_main_8c_1af20a88180db1113be1e89266917d148b"/><section>
    <title>HAL_ADC_ConvCpltCallback()</title>
<indexterm><primary>HAL_ADC_ConvCpltCallback</primary><secondary>main.c</secondary></indexterm>
<indexterm><primary>main.c</primary><secondary>HAL_ADC_ConvCpltCallback</secondary></indexterm>
<para><computeroutput>void HAL_ADC_ConvCpltCallback (ADC_HandleTypeDef * hadc)</computeroutput></para><para>

<para>Fonction d&apos;asservissement du courant. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>*adc</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>void </para>
</formalpara>
</para>
</section>
<anchor xml:id="_main_8c_1a8a3b0ad512a6e6c6157440b68d395eac"/><section>
    <title>HAL_TIM_PeriodElapsedCallback()</title>
<indexterm><primary>HAL_TIM_PeriodElapsedCallback</primary><secondary>main.c</secondary></indexterm>
<indexterm><primary>main.c</primary><secondary>HAL_TIM_PeriodElapsedCallback</secondary></indexterm>
<para><computeroutput>void HAL_TIM_PeriodElapsedCallback (TIM_HandleTypeDef * htim)</computeroutput></para><para>

<para>Period elapsed callback in non blocking mode. </para>
</para>

<para><note><title>Note</title>

<para>This function is called when TIM6 interrupt took place, inside HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment a global variable &quot;uwTick&quot; used as application time base. </para>
</note>

                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>htim</entry><entry>
<para>: TIM handle </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Return values</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>None</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_main_8c_1ae494a9643f29b87d6d81e5264e60e57b"/><section>
    <title>HAL_UART_RxCpltCallback()</title>
<indexterm><primary>HAL_UART_RxCpltCallback</primary><secondary>main.c</secondary></indexterm>
<indexterm><primary>main.c</primary><secondary>HAL_UART_RxCpltCallback</secondary></indexterm>
<para><computeroutput>void HAL_UART_RxCpltCallback (UART_HandleTypeDef * huart)</computeroutput></para><para>

<para>Attend qu&apos;un caractère soit entré par l&apos;utilisateur et renvoie vers la fonction d&apos;echo dans la boucle du main. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>*huart</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>void </para>
</formalpara>
</para>
</section>
<anchor xml:id="_main_8c_1a840291bc02cba5474a4cb46a9b9566fe"/><section>
    <title>main()</title>
<indexterm><primary>main</primary><secondary>main.c</secondary></indexterm>
<indexterm><primary>main.c</primary><secondary>main</secondary></indexterm>
<para><computeroutput>int main (void )</computeroutput></para><para>

<para>The application entry point. </para>
</para>

<para>
                <formalpara>
                    <title>
Return values</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>int</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_main_8c_1a70af21c671abfcc773614a9a4f63d920"/><section>
    <title>SystemClock_Config()</title>
<indexterm><primary>SystemClock_Config</primary><secondary>main.c</secondary></indexterm>
<indexterm><primary>main.c</primary><secondary>SystemClock_Config</secondary></indexterm>
<para><computeroutput>void SystemClock_Config (void )</computeroutput></para><para>

<para>System Clock Configuration. </para>
</para>

<para>
                <formalpara>
                    <title>
Return values</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>None</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>

<para>Configure the main internal regulator output voltage</para>

<para>Initializes the RCC Oscillators according to the specified parameters in the RCC_OscInitTypeDef structure.</para>

<para>Initializes the CPU, AHB and APB buses clocks</para>
</section>
</section>
</section>
